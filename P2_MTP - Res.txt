Questão 1:

MAT0: 11711EAU005
KANO0: 3
KCUR0: 1
KNUM0: 6

MAT1: 10021EEL034
KANO1: 5
KCUR1: 4
KNUM1: 8

MAT2: 10011EBI075
KANO2: 4
KCUR2: 2
KNUM2: 4

Questão 2:

a. A forca gravitacional entre as esferas azul e vermelha, distantes 13.914920 metros uma da outra, eh de 6.889606 Newtons.

b. O objetivo do programa no geral é calcular a força gravitacional entre duas esferas, onde os dados que determinam a localização espacial (posição x, y, z) e a massa de cada uma, são determinadas de acordo com constantes calculadas no início. Primeiramente é definida a constante gravitacional G, depois para armazenar os dados referentes a cada esfera é criada uma estrutura. Por último são definidas duas funções, uma que efetuará o cálculo da distância entre as esferas (utilizando-se das constantes x, y, z), enquanto a outra, utilizando a primeira função, determina o valor da força gravitacional entre as duas esferas.

Questão 3:

a. instancia: zwtqnkh 1.300000
                                  
   instancia: yvspmjg 1.300000

   novainsta: yvspmjg -8.700000

b. Na estrutura temos dois tipos de dados, um ponto flutuante, que ocupa 8 bytes e uma string, que depende da constante KNUM1 (1 à 9), podendo ocupar de 1 à 9 bytes. Assim, o valor mínimo que estrutura pode ocupar é de 9 bytes, e 17 bytes no máximo. Como KNUM1 tem valor 8, então a estrutura ocupará 16 bytes.

c. Na função criaInstancia, a string código é alterada caractere por caractere, sendo substituído pelo anterior de acordo com a tabela ASCII, e a variável preço é subtraída em 10 unidades. Depois de todo o processo as variáveis são amazenadas em uma estrutura temporária, que é utilizada para retornar as variáveis a outra estrutura por meio de atribuição.

d. A string código, em ambas estruturas, ao final da execução do programa são iguais, pois a função criaInstancia utiliza de um ponteiro (que aponta para a variável) e assim modifica o conteúdo na variável. Já o membro preço, em novainsta é diferente do mesmo membro em instancia, sendo seu valor 10 unidades menor.

Questão 4: 

a. (2) 10011EBI075 : (1) 10021EEL034 : (0) 11711EAU005 

b. 

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 3

typedef
	struct stTexto {
int id;
char mat[12];
}
Texto;

void imprime(Texto * dado, int qtde) {
	if(qtde < N){
	imprime(dado-1,qtde+1);
	printf(": (%d) %s ", dado->id, dado->mat);
	}
	else printf(":\n");
}

int main() {
	
	Texto grupo[N];
	int i;
	for(i = 0; i < N; i++) grupo[i].id = i;
	strcpy(grupo[0].mat,"11711EAU005");
	strcpy(grupo[1].mat,"10021EEL034");
	strcpy(grupo[2].mat,"10011EBI075");
	imprime(grupo+(N-1), 0);
	return 0;

c. 

Questão 5:

a. Fibonacci(5) = 5
   Fibonacci(7) = 13
   Fibonacci(3) = 2
   Numero secreto = 61
   
b. O primeiro comando da função cria um vetor estático (para manter o mesmo valor durante a recursividade), onde o segundo valor é 1, e todos os outros 0. 

c. 

Questão 6: 
 
int trib(int n){
	
	if( n == 0){
		return 0;
	} else if(n == 1){
		return 1;
	}else if(n == 2){
		return 2;
	}else{
		return trib(n-1) + 2*trib(n-2) + 3*trib(n-3); }
		
}
